/**
 * WiseUp 관리 시스템 - 개인 사용자 기반 격리 타입 정의
 * DATABASE_DESIGN.md 준수
 */

// ==================== 사용자 프로필 타입 ====================

export interface User {
  authUid: string;
  name: string;
  email: string;
  profilePicture?: string;
  googleId: string;
  isActive: boolean;
  createdAt: FirebaseFirestore.Timestamp;
  updatedAt: FirebaseFirestore.Timestamp;
}

// ==================== 출석 관리 타입 ====================

export type AttendanceStatus = "present" | "absent" | "late" | "early_leave";

export interface AttendanceRecord {
  date: string;
  status: AttendanceStatus;
  seatId?: string;
  checkInTime?: FirebaseFirestore.Timestamp;
  checkOutTime?: FirebaseFirestore.Timestamp;
  notes?: string;
  createdAt: FirebaseFirestore.Timestamp;
  updatedAt: FirebaseFirestore.Timestamp;
}

export interface AttendanceSummary {
  period: string;
  totalDays: number;
  presentDays: number;
  absentDays: number;
  lateDays: number;
  earlyLeaveDays: number;
  attendanceRate: number;
  createdAt: FirebaseFirestore.Timestamp;
  updatedAt: FirebaseFirestore.Timestamp;
}

// ==================== 시간표 관리 타입 ====================

export type DayOfWeek = "monday" | "tuesday" | "wednesday" | "thursday" | "friday" | "saturday" | "sunday";

export interface TimeSlot {
  startTime: string;
  endTime: string;
  subject: string;
  type: "class" | "self_study";
  isAutoGenerated: boolean;
  color?: string;
}

export interface Timetable {
  name: string;
  basicSchedule: {
    arrivalTime: string;
    departureTime: string;
    daysOfWeek: DayOfWeek[];
    timeSlotInterval: number;
  };
  detailedSchedule: {
    [dayOfWeek: string]: {
      timeSlots: TimeSlot[];
    };
  };
  isShared: boolean;
  shareToken?: string;
  shareSettings: {
    allowEdit: boolean;
    allowView: boolean;
    expiresAt?: FirebaseFirestore.Timestamp;
  };
  autoFillSettings: {
    enabled: boolean;
    defaultSubject: string;
    fillEmptySlots: boolean;
  };
  isActive: boolean;
  createdAt: FirebaseFirestore.Timestamp;
  updatedAt: FirebaseFirestore.Timestamp;
}

// ==================== 시간표 공유 타입 ====================

export interface SharedSchedule {
  shareToken: string;
  timetableId: string;
  permissions: {
    canEdit: boolean;
    canView: boolean;
    canComment: boolean;
  };
  accessSettings: {
    requireName: boolean;
    requireEmail: boolean;
    maxContributions?: number;
  };
  linkSettings: {
    isActive: boolean;
    expiresAt?: FirebaseFirestore.Timestamp;
    createdAt: FirebaseFirestore.Timestamp;
    lastUsedAt?: FirebaseFirestore.Timestamp;
    usageCount: number;
  };
  title?: string;
  description?: string;
  createdAt: FirebaseFirestore.Timestamp;
  updatedAt: FirebaseFirestore.Timestamp;
}

export interface ScheduleContribution {
  shareToken: string;
  timetableId: string;
  contributor: {
    name?: string;
    email?: string;
    ipAddress: string;
  };
  contributions: {
    dayOfWeek: string;
    timeSlots: {
      startTime: string;
      endTime: string;
      subject: string;
      type: "class" | "self_study";
      color?: string;
      note?: string;
    }[];
  }[];
  status: "pending" | "approved" | "rejected" | "applied";
  appliedAt?: FirebaseFirestore.Timestamp;
  submittedAt: FirebaseFirestore.Timestamp;
  processedAt?: FirebaseFirestore.Timestamp;
  processedBy?: string;
}

// ==================== 좌석 관리 타입 ====================

export interface Seat {
  seatNumber: string;
  location: {
    x: number;
    y: number;
  };
  status: "available" | "occupied" | "maintenance";
  createdAt: FirebaseFirestore.Timestamp;
  updatedAt: FirebaseFirestore.Timestamp;
}

export type AssignmentStatus = "active" | "expired" | "cancelled";

export interface SeatAssignment {
  seatId: string;
  assignedAt: FirebaseFirestore.Timestamp;
  expiresAt?: FirebaseFirestore.Timestamp;
  status: AssignmentStatus;
  updatedAt: FirebaseFirestore.Timestamp;
}

export interface SeatLayout {
  name: string;
  layout: {
    seats: {
      id: string;
      position: { x: number; y: number };
      size: { width: number; height: number };
    }[];
    dimensions: {
      width: number;
      height: number;
    };
  };
  createdAt: FirebaseFirestore.Timestamp;
  updatedAt: FirebaseFirestore.Timestamp;
}

// ==================== 학급 정보 타입 ====================

export interface ClassSection {
  name: string;
  description?: string;
  schedule: {
    startTime: string;
    endTime: string;
    daysOfWeek: number[];
  };
  createdAt: FirebaseFirestore.Timestamp;
  updatedAt: FirebaseFirestore.Timestamp;
}

// ==================== 사용자 설정 타입 ====================

export interface UserSettings {
  notifications: {
    attendance: boolean;
    schedule: boolean;
    announcements: boolean;
  };
  preferences: {
    theme: "light" | "dark";
    language: string;
  };
  createdAt: FirebaseFirestore.Timestamp;
  updatedAt: FirebaseFirestore.Timestamp;
}

// ==================== 학생 관리 타입 ====================

export interface Student {
  id: string;
  name: string;
  email: string;
  grade: string;
  phone?: string;
  parentName?: string;
  parentPhone?: string;
  address?: string;
  isActive: boolean;
  createdAt: FirebaseFirestore.Timestamp;
  updatedAt: FirebaseFirestore.Timestamp;
  userId: string;
}

export interface CreateStudentRequest {
  name: string;
  email: string;
  grade: string;
  phone?: string;
  parentName?: string;
  parentPhone?: string;
  address?: string;
}

export interface UpdateStudentRequest {
  name?: string;
  email?: string;
  grade?: string;
  phone?: string;
  parentName?: string;
  parentPhone?: string;
  address?: string;
}

export interface SearchStudentsRequest {
  query: string;
  limit?: number;
}

// ==================== 사용자 계정 관리 타입 ====================

export interface UserDataStats {
  userId: string;
  totalDocuments: number;
  collectionStats: {
    [collectionName: string]: number;
  };
  userInfo: {
    name: string;
    email: string;
    isActive: boolean;
    createdAt: FirebaseFirestore.Timestamp;
  };
}

export interface UserDataBackup {
  userId: string;
  userProfile: User;
  collections: {
    [collectionName: string]: Array<{
      id: string;
      data: any;
    }>;
  };
  createdAt: FirebaseFirestore.Timestamp;
  backupType: "full_backup";
}

// ==================== 응답 타입 ====================

export interface ApiResponse<T = any> {
  success: boolean;
  message?: string;
  data?: T;
}
